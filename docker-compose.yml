version: "3.8"

services:
  #Chirpstack
  chirpstack-network-server:
    image: chirpstack/chirpstack-network-server:3
    volumes:
      - ./configuration/chirpstack-network-server:/etc/chirpstack-network-server

  chirpstack-application-server:
    image: chirpstack/chirpstack-application-server:3
    ports:
      - 8080:8080
    volumes:
      - ./configuration/chirpstack-application-server:/etc/chirpstack-application-server

  chirpstack-gateway-bridge:
    image: chirpstack/chirpstack-gateway-bridge:3
    ports:
      - 1700:1700/udp
    volumes:
      - ./configuration/chirpstack-gateway-bridge:/etc/chirpstack-gateway-bridge

  chirpstack-geolocation-server:
    image: chirpstack/chirpstack-geolocation-server:3
    volumes:
      - ./configuration/chirpstack-geolocation-server:/etc/chirpstack-geolocation-server

  postgresql:
    image: postgres:9.6-alpine
    environment:
      - POSTGRES_PASSWORD=root
    volumes:
      - ./configuration/postgresql/initdb:/docker-entrypoint-initdb.d
      - postgresqldata:/var/lib/postgresql/data

  redis:
    image: redis:5-alpine
    volumes:
      - redisdata:/data

  mosquitto:
    image: eclipse-mosquitto
    ports:
      - 1883:1883

  #OS2IoT
  os2iot-frontend:
    image: "os2iot-frontend"
    build: "../OS2IoT-frontend"
    volumes:
      - "../OS2IoT-frontend:/app"
      - "/app/node_modules"
    ports:
      - "4201:4200"

  os2iot-backend:
    image: "os2iot-backend"
    build:
      context: ../OS2IoT-backend
      dockerfile: dockerfile
      target: builder
    volumes:
      - "../OS2IoT-backend:/tmp/os2iot/backend"
      - "/tmp/os2iot/backend/node_modules"
    ports:
      - 3000:3000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/status"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      - os2iot-postgresql
    environment:
      DATABASE_HOSTNAME: os2iot-postgresql
      DATABASE_PORT: 5432

  os2iot-postgresql:
    restart: always
    image: postgis/postgis # We need postgis to store geodata
    ports:
      - 5433:5432
    hostname: os2iot-pg
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U os2iot"]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_DB: os2iot
      POSTGRES_USER: os2iot
      POSTGRES_PASSWORD: toi2so
    volumes:
      - ./configuration/os2iot-postgresql/initdb:/docker-entrypoint-initdb.d
      - pg-data:/var/lib/postgresql:Z

  os2iot-inbound-mosquitto:
    image: eclipse-mosquitto
    ports:
      - 1885:1883

  os2iot-outbound-mosquitto:
    image: eclipse-mosquitto
    ports:
      - 1884:1883

volumes:
  pg-data:
  postgresqldata:
  redisdata:
